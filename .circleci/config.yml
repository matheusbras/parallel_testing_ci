---
version: 2
jobs:
  build:
    working_directory: ~/test
    docker:
      - image: circleci/ruby:2.4-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          TZ: "/usr/share/zoneinfo/America/Los_Angeles"
          RAILS_ENV: test
      - image: redis:2.8.19
      - image: circleci/postgres:9.6-alpine-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: parallel_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

        # Restore Cached Dependencies
      - type: cache-restore
        name: Restore bundle cache
        keys:
          - Bonsai-bundle-{{ checksum "Gemfile.lock" }}
          - Bonsai-bundle-

        # Bundle install dependencies
      - run: bundle install --path vendor/bundle

        # Cache Dependencies
      - type: cache-save
        name: Store bundle cache
        key: Bonsai-bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      - restore_cache:
          keys:
            - Bonsai-asset-cache-{{ arch }}-{{ .Branch }}
            - Bonsai-asset-cache-

      - run: bundle exec rake assets:precompile

      - save_cache:
          key: Bonsai-asset-cache-{{ arch }}-{{ .Branch }}-{{ epoch }}
          paths:
            - public/assets
            - tmp/cache/assets/sprockets

        # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

        # Setup the database
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            COVERAGE=on bundle exec rspec --format progress \
            --format RspecJunitFormatter \
            --out /tmp/test-results/rspec.xml \
            --format progress \
            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - store_artifacts:
          path: coverage

